grammar Smalltalk;

module: function | script;
function: funcdecl ws? (EOF | script);
funcdecl: IDENTIFIER | declPairs | ('-'|BINARY_SELECTOR | LLT | GGT | LTE | GTE | LT | GT) ws? variable;
declPairs : ws? (declPair ws?)+;
declPair : KEYWORD ws? variable;
script : ws? primitive? ws? sequence EOF;
sequence : temps ws? statements? | ws? statements;
ws : (SEPARATOR | COMMENT)+;
temps: temps1 | temps2;
temps1: PIPE2;
temps2: PIPE (ws? IDENTIFIER)+ ws? PIPE;
statements : answer ws? 
           | expressions ws? PERIOD? ws? answer ws? 
           | expressions PERIOD? ws? 
           ;
answer : CARROT ws? expression ws? PERIOD?;
expression : assignment | cascade | keywordSend | binarySend | primitive | EMBEDC;
expressions : expression expressionList*;
expressionList : PERIOD? ws? expression;
cascade : (keywordSend | binarySend) (ws? SEMI_COLON ws? message)+;
message : binaryMessage | unaryMessage | keywordMessage;
assignment : variable ws? ASSIGNMENT ws? expression;
variable : IDENTIFIER | IDENTIFIER2 | UNDERSCORE | UNDERSCORE2;
binarySend : unarySend binaryTail?;
unarySend : operand ws? unaryTail?;
keywordSend : binarySend keywordMessage;
keywordMessage : ws? (keywordPair ws?)+;
keywordPair : KEYWORD ws? binarySend ws?;
operand : literal | reference | subexpression;
subexpression : OPEN_PAREN ws? expression ws? CLOSE_PAREN;
literal : runtimeLiteral | parsetimeLiteral;
runtimeLiteral : dynamicDictionary | dynamicArray | block;
block : BLOCK_START blockParamList? ws? sequence? BLOCK_END
	  | BLOCK_START blockParamList? ws? (PIPE|PIPE2 (ws? IDENTIFIER)+ ws? PIPE) ws? sequence? BLOCK_END;
blockParamList : (ws? BLOCK_PARAM)+;
dynamicDictionary : DYNDICT_START ws? expressions? ws? DYNARR_END;
dynamicArray : DYNARR_START ws? expressions? ws? DYNARR_END;
parsetimeLiteral : pseudoVariable | number | charConstant | literalArray | string | symbol;
number : numberExp | hex_ | stFloat | stInteger;
numberExp : (stFloat | stInteger) EXP stInteger;
charConstant : CHARACTER_CONSTANT | DOLLAR;
hex_ : MINUS? HEXNUM;
stInteger : MINUS? INTNUM;
stFloat : MINUS? INTNUM PERIOD INTNUM;
pseudoVariable : RESERVED_WORD;
string : STRING  ;
primitive : LT ws? (KEYWORD ws? ( stFloat |INTNUM | symbol | IDENTIFIER | string| RESERVED_WORD) ws?)+ ws? GT;
symbol : HASH bareSymbol | LITARR_START ws? ((symbol |bareSymbol)ws?)+ ws? CLOSE_PAREN | DYNDICT_START ws? ((symbol |bareSymbol)ws?)+ ws? DYNARR_END;
bareSymbol : (IDENTIFIER | BINARY_SELECTOR | LT | GT|MINUS| OPEN_PAREN | CLOSE_PAREN) | KEYWORD+ | string | RESERVED_WORD;
literalArray : LITARR_START dynamicDictionary? literalArrayRest;
literalArrayRest : ws? ((parsetimeLiteral | bareLiteralArray | bareSymbol) ws?)* CLOSE_PAREN;
bareLiteralArray : OPEN_PAREN literalArrayRest;
unaryTail : unaryMessage ws? unaryTail? ws?;
unaryMessage : ws? unarySelector;
unarySelector : IDENTIFIER;
keywords : KEYWORD+;
reference : variable;
binaryTail : binaryMessage binaryTail?;
binaryMessage : ws? ('-'|'|'|BINARY_SELECTOR | LLT | GGT | LTE | GTE | LT | GT) ws? (unarySend | operand);

SEPARATOR : [ \t\r\n];
STRING : '\'' (.)*? '\'';
EMBEDC: '<C:' (.)*? '>';
COMMENT : '"' (.)*? '"';
BLOCK_START : '[';
BLOCK_END : ']';
CLOSE_PAREN : ')';
OPEN_PAREN : '(';
PIPE2 : '||';
PIPE : '|';
PERIOD : '.';
SEMI_COLON : ';';
LLT : '<<' | '&lt;&lt;';
GGT : '>>' | '&gt;&gt;';
LTE : '<=' | '&le;';
GTE : '>=' | '&ge;';
LT : '<' | '&lt;';
GT : '>' | '&gt;';
AMP: '&amp;';
MINUS : '-';
BINARY_SELECTOR : ('\\' | '+' | '*' | '/' | '=' | ',' | '@' | '%' | '~' | '|' | '&' | '?'| '->')+;
RESERVED_WORD : 'nil' | 'true' | 'false' | 'self' | 'super';
IDENTIFIER : [_]*[a-zA-Z]+[a-zA-Z0-9_]*;
IDENTIFIER2: IDENTIFIER (PERIOD IDENTIFIER)+;
CARROT : '^';
UNDERSCORE: '_';
UNDERSCORE2: '__';
ASSIGNMENT : ':=';
COLON : ':';
HASH : '#';
DOLLAR : '$';
EXP : 'e';
HEXNUM : '16r'[0-9a-fA-F]+;
INTNUM: [0-9]+;
HEX : '16r';
LITARR_START : '#(';
DYNDICT_START : '#{';
DYNARR_END : '}';
DYNARR_START : '{';
HEXDIGIT : [0-9a-fA-F];
KEYWORD : IDENTIFIER COLON;
BLOCK_PARAM : COLON SEPARATOR* IDENTIFIER;
CHARACTER_CONSTANT :  DOLLAR (LTE | GTE | LT | GT | HEXDIGIT | DOLLAR | HASH|'?'|'*'|'+'|';'|'&'|'^'|'['|']'|','|':'|'"'|'='|'\''| '-'|'\\'|'/'|PIPE|'%'|'@' |'.' | '!'|UNDERSCORE|OPEN_PAREN|CLOSE_PAREN|DYNARR_END|DYNARR_START);

